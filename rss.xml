<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/">
    <channel>
        <title></title>
        <link>undefined</link>
        <description>undefined</description>
        <lastBuildDate>Fri, 17 Jan 2025 03:56:22 GMT</lastBuildDate>
        <docs>https://validator.w3.org/feed/docs/rss2.html</docs>
        <generator>Joplin Pages Publisher</generator>
        <item>
            <title><![CDATA[Alexander Elder's Trading Wisdom - Key Takeaways from "The New Trading for a Living" (Part 2)]]></title>
            <guid>95434df64b444d25ae2a806f653d40d8</guid>
            <pubDate>Fri, 17 Jan 2025 03:41:57 GMT</pubDate>
            <content:encoded><![CDATA[<div><pre class="hljs"><code>Title     : <span class="hljs-type">The</span> <span class="hljs-keyword">New</span> Trading <span class="hljs-keyword">for</span> a Living: Psychology, Discipline, Trading Tools <span class="hljs-keyword">and</span> Systems, Risk Control, Trade Management
Author    : <span class="hljs-type">Alexander</span> Elder
Tags      : <span class="hljs-type">Business</span> &amp; Economics, Finance, General, Accounting
Ids       : <span class="hljs-type">isbn</span>:<span class="hljs-number">9781118443927</span>, amazon:<span class="hljs-number">1118443926</span>, google:ydY5BAAAQBAJ
Published : <span class="hljs-type">Sep</span> <span class="hljs-number">2014</span>
Publisher : <span class="hljs-type">Wiley</span></code></pre></div>
<h2 id="part-2-mass-psychology">PART 2 Mass Psychology</h2>
<h3 id="11-what-is-price">11. What Is Price?</h3>
<h4 id="behavior-patterns">Behavior Patterns</h4>
<p>Huge crowds trade on stock, commodity, and option exchanges. Big money and little money, smart money and dumb money, institutional money and private money, long-term investors and short-term traders, all meet at the exchange. <em>Each price represents a momentary consensus of value between buyers, sellers, and undecided. traders at the moment of transaction. There is a crowd of traders behind every pattern on the screen.</em></p>
<p>An astute trader aims to enter the market during quiet times and take profits during wild times. That, of course, is the total opposite of how amateurs act: they jump in or out when prices begin to run, but grow bored and not interested when prices are sleepy.</p>
<p>Chart patterns reflect swings of mass psychology in the financial markets. Each trading session is a battle between bulls, who make money when prices rise, and bears, who profit when they fall. The goal of a serious technical analyst is to discover the balance of power between bulls and bears and bet on the winning group. If bulls are much stronger, you should buy and hold. If bears are much stronger, you should sell and sell short. If both camps are about equal in strength, a wise trader stands aside. He lets bulls and bears fight with each other, and enters a trade only when he is reasonably sure which side is likely to win.</p>
<p>Prices and volume, along with the indicators that track them, reflect crowd behavior. Technical analysis is similar to poll taking. Both combine science and art: They are partly scientific because we use statistical methods and computers; they are partly artistic because we use personal judgment and experience to interpret our findings.</p>
<h4 id="a-consensus-of-value">A Consensus of Value</h4>
<p>Each tick on your quote screen represents a deal between a buyer and a seller.</p>
<p>Buyers are buying because they expect prices to rise. Sellers are selling because they expect prices to fall. Buyers and sellers are surrounded by crowds of undecided traders who put pressure on them because they may become buyers or sellers themselves.</p>
<p>Traders come to the markets from all over the world: in person, via computers, or through their brokers. Everybody has a chance to buy and to sell. <em>Each price is a momentary consensus of value of all market participants, expressed in action</em>. Prices are created by masses of traders—buyers, sellers, and undecided people. The patterns of prices and volume reflect mass psychology of the markets.</p>
<p>Traders can be divided into three groups: <strong>buyers</strong>, <strong>sellers</strong>, and <strong>undecided</strong>. Buyers want to pay as little as possible, and sellers want to charge as much as possible.Their permanent conflict is reflected in bid-ask spreads. “Ask” is what a seller asks for his merchandise. “Bid” is what a buyer offers for that merchandise.</p>
<h3 id="12-what-is-the-market">12. What Is the Market?</h3>
<h4 id="inside-information">Inside Information</h4>
<p>Charts reflect all trades by all market participants—including insiders. They leave their footprints on the charts just like everyone else—and it is our job as technical analysts to follow them to the bank. Technical analysis can help you detect insider buying and selling.</p>
<h4 id="the-source-of-money">The Source of Money</h4>
<p><em>The only reason there is money in the markets is that other traders put it there. The money you want to make belongs to other people who have no intention of giving it to you.</em></p>
<p>Tim Slater compared trading to a medieval battle. A man used to go on a battlefield with his sword and try to kill his opponent, who was trying to kill him. The winner took the loser’s weapons, his chattels, and his wife, and sold his children into slavery. Now we go to the exchanges instead of an open field. When you take money away from a man, it is not that different from drawing his blood. He may lose his house, his chattels, and his wife, and his children will suffer.</p>
<p><em>The market is a huge crowd of people. Each member of the crowd tries to take money from others by outsmarting them.</em></p>
<p>The market is a uniquely harsh environment because everyone is against you, and you are against everyone.</p>
<p><em>In trading, you compete against some of the brightest minds in the world, while fending off the piranhas of commissions and slippage.</em></p>
<h3 id="13-the-trading-scene">13. The Trading Scene</h3>
<h4 id="institutional-traders">Institutional Traders</h4>
<p>In addition to the informational advantage, employees of trading firms have a psychological one—they can be more relaxed because their own money isn’t at risk. When young people tell me of their interest in trading, I tell them to get a job with a trading firm and learn on someone else’s dime. Firms almost never hire traders past their mid-twenties.</p>
<p>An individual who wants to succeed against the giants must develop patience and eliminate greed. Remember, your goal is to trade well, not to trade often.</p>
<h3 id="14-the-market-crowd-and-you">14. The Market Crowd and You</h3>
<h4 id="independence">Independence</h4>
<p>You can succeed as a trader only when you think and act as an individual. The weakest part of any trading system is the trader himself. Traders fail when they trade without a plan or deviate from their plans. Plans are created by reasoning individuals. Impulsive trades are made by sweaty group members.</p>
<p><em>You have to observe yourself and notice changes in your mental state as you trade. Write down your reasons for entering a trade and the rules for getting out of it, including money management rules.You may not change your plan while you have an open position.</em></p>
<h4 id="who-leads">Who Leads?</h4>
<p>Price is the leader of the market crowd.</p>
<h4 id="crowd-mentality">Crowd Mentality</h4>
<p><em>Your human nature leads you to give up your independence under stress.When you put on a trade, you feel the desire to imitate others, overlooking objective signals. This is why you need to write down and follow your trading system and money management rules. They represent your rational individual decisions, made before you entered a trade.</em></p>
<h4 id="experts-on-crowds">Experts on Crowds</h4>
<p>Group members may catch a few trends, but they get killed when trends reverse. Successful traders are independent thinkers.</p>
<h3 id="15-psychology-of-trends">15. Psychology of Trends</h3>
<h4 id="social-psychology">Social Psychology</h4>
<p>Fortunately, your charts and indicators reflect mass psychology in action. <em>A technical analyst is an applied social psychologist, usually armed with a computer.</em></p>
<h4 id="price-shocks">Price Shocks</h4>
<p>Price functions as the leader of the market crowd.</p>
<p><em>Winners feel rewarded when price moves in their favor, and losers feel punished when it moves against them. Crowd members remain blissfully unaware that by focusing on price they create their own leader. Traders who feel mesmerized by prices create their own idols.</em></p>
<h4 id="rallies-and-declines">Rallies and Declines</h4>
<p>Few traders are purely rational human beings. There is a great deal of emotion in the markets. Most participants act on the principle of “monkey see, monkey do.” The waves of fear and greed sweep up bulls and bears.</p>
<p>The sharpness of any rally depends on how traders feel. If buyers feel just a little stronger than sellers, the market rises slowly. When they feel much stronger than sellers, the market rises fast. It is the job of a technical analyst to find when buyers are strong and when they start running out of steam.</p>
<h4 id="strong-feelings">Strong Feelings</h4>
<p>Prices move up or down not because of different numbers but because of changes in the<br />
intensity of greed and fear among buyers and sellers.</p>
<p>When the trend is up, bulls feel optimistic and don’t mind paying up. They buy high because they expect prices to rise even higher. Bears feel afraid in an uptrend, and they agree to sell only at a higher price. When greedy and optimistic bulls meet fearful and defensive bears, the market rallies. The stronger their feelings, the sharper the rally. The rally ends only when bulls start losing their enthusiasm.</p>
<p>When prices slide, bears feel optimistic and don’t quibble about selling short at lower prices. Bulls are fearful and agree to buy only at a discount. While bears feel like winners, they continue to sell at lower prices, and the downtrend continues. It ends when bears start feeling cautious and refuse to sell at lower prices.</p>
<p>Each price bar or candle reflects a battle between bulls and bears. When buyers feel strongly bullish, they buy more eagerly and push markets up. When sellers feel strongly bearish, they sell more actively and push markets down.</p>
<p>Charts are a window into mass psychology. When you analyze charts, you analyze the behavior of trading masses. Technical indicators help make this analysis more objective.</p>
<p><em>Technical analysis is for-profit social psychology.</em></p>
<h3 id="16-managing-versus-forecasting">16. Managing versus Forecasting</h3>
<h4 id="read-the-market-manage-yourself">Read the Market, Manage Yourself</h4>
<p><em>Successful trading stands on three pillars.You need to analyze the balance of power between bulls and bears.You need to practice good money management.You need personal discipline to follow your trading plan and avoid getting high or depressed in the markets.</em></p>
<h4 id="a-crystal-ball">A Crystal Ball</h4>
<p>To make money trading, you don’t need to forecast the future. You have to extract<br />
information from the market and find out whether bulls or bears are in control. You<br />
need to measure the strength of the dominant market group and decide how likely<br />
the current trend is to continue. You need to practice conservative money management aimed at long-term survival and profit accumulation. You must observe how<br />
your mind works and avoid slipping into greed or fear. A trader who does all of this<br />
will succeed ahead of any forecaster.</p>
<h4 id="poll-taking">Poll-Taking</h4>
<p>Politicians want to know their chances of being elected or re-elected. They make<br />
promises to voters and have poll-takers measure a crowd’s response. Technical analysis is similar to political poll-taking, as both aim to read the intentions of masses.<br />
Poll-takers do it to help their clients win elections, while technicians do it for<br />
financial gain.</p>
<p>Fundamental analysts study the actions of the Federal Reserve, follow earnings reports, examine crop reports, and so on. Major bull and bear markets reflect fundamental changes in supply and demand. Still, even if you know those factors, you can lose money trading if you are out of touch with intermediate- and short-term trends, which depend on the crowd’s emotions.</p>
<p>Technical analysts believe that prices reflect everything known about the market, including fundamental factors. Each price represents the consensus of value of all market participants—large commercial interests and small speculators, fundamental researchers and technicians, insiders and gamblers.</p>
<p>Technical analysis is a study of mass psychology. It is partly a science and partly an art. Technicians use many scientific methods, including mathematical concepts of game theory, probabilities, and so on. They use computers to track indicators.</p>
<p>Technical analysis is also an art. The bars or candles on our charts coalesce into patterns and formations. The movement of prices and indicators produces a sense of flow and rhythm, a feeling of tension and beauty that helps us sense what is happening and how to trade.</p>
<p>Individual behavior is complex, diverse, and difficult to predict. Group behavior is primitive. Technicians study the behavior patterns of market crowds. They trade when they recognize patterns that preceded previous market moves.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Indulge in Delicious Café Mocha Recipes: From Classic to Creative]]></title>
            <guid>67ffd91061fd4a8794dac993f1ec78e2</guid>
            <pubDate>Fri, 17 Jan 2025 03:30:03 GMT</pubDate>
            <content:encoded><![CDATA[<p>This beverage essentially combines chocolate with <a title="/article/delicious-cafe-au-lait-recipes-easy-to-make-at-home" href="/article/delicious-cafe-au-lait-recipes-easy-to-make-at-home">Café au Lait</a>. The proportions of coffee and milk can be adjusted to suit individual preferences.</p>
<p><strong>Ingredients:</strong></p>
<ul>
<li>1/3 cup milk</li>
<li>2 tablespoons chocolate syrup</li>
<li>2/3 cup coffee</li>
<li>Sweetened chocolate powder (optional)</li>
</ul>
<p><strong>Directions:</strong></p>
<ul>
<li>Pour the coffee into a cup.</li>
<li>Mix the chocolate syrup into the coffee.</li>
<li>Steam the milk until hot and foamy, then pour into the coffee, leaving a layer of froth on top.</li>
<li>Drizzle chocolate powder on top, if you wish.</li>
</ul>
<p><strong>Yield:</strong> 1 Servings</p>
<p><strong>Variations:</strong><br />
To create a Café Mocha Mint, mix 1/8 teaspoon of mint extract into the coffee along with the chocolate syrup. The remaining steps are the same as for a regular Café Mocha, and a fresh mint sprig can be used as an optional garnish.</p>
<p>To create a Mandarin Mocha, mix 1/8 teaspoon of orange extract into the coffee along with the chocolate syrup. The remaining steps are the same as for a regular Café Mocha.</p>
<p>Volumetric measurement refer to <a title="/article/standard-volumetric-measurement" href="/article/standard-volumetric-measurement">this article</a>.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Delicious Café au Lait Recipes: Easy to Make at Home]]></title>
            <guid>8cbbe226124f4d8b8e35effc8bc36f37</guid>
            <pubDate>Thu, 16 Jan 2025 23:47:27 GMT</pubDate>
            <content:encoded><![CDATA[<p>Café au Lait is a popular beverage characterized by its mild flavor, achieved by combining steamed milk with coffee. The proportions of coffee and milk can be adjusted to suit individual preferences.</p>
<p><strong>Ingredients</strong>:</p>
<ul>
<li>Optional additions to Café au Lait include ground cinnamon, nutmeg, or sweetened chocolate powder.</li>
<li>1/3 cup milk</li>
<li>2/3 cup coffee</li>
</ul>
<p><strong>Directions</strong>:</p>
<ul>
<li>Pour the coffee into a cup.</li>
<li>Steam the milk and pour into the coffee, leaving a layer of froth on top.</li>
<li>Drizzle cinnamon, nutmeg, or chocolate powder on top of the foam, if you wish.</li>
</ul>
<p><strong>Yield</strong>: 1 Servings</p>
<p><strong>Variation</strong>:<br />
To create a Café Vermont, add 3 tablespoons of maple syrup to the coffee before adding the steamed milk. The remaining steps of the process are identical to those for making a traditional Café au Lait.</p>
<p>Volumetric measurement refer to <a title="/article/standard-volumetric-measurement" href="/article/standard-volumetric-measurement">this article</a>.</p>
<pre style="background:linear-gradient(to right, white, #00BB2D, #84C3BE, #F3F7EC, #E3FEF7);color:#1E0342;padding:5px" align="right" class="jop-noMdConv">
<a href="https://x.com/rnchyd/status/1880045986795647150" target="_blank" class="jop-noMdConv">Reply</a>
</pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Alexander Elder's Trading Wisdom : Key Takeaways from "The New Trading for a Living" (Part 1)]]></title>
            <guid>e4025b8ccfa44edb8af41a25b5902017</guid>
            <pubDate>Thu, 16 Jan 2025 21:08:34 GMT</pubDate>
            <content:encoded><![CDATA[<div><pre class="hljs"><code>Title     : <span class="hljs-type">The</span> <span class="hljs-keyword">New</span> Trading <span class="hljs-keyword">for</span> a Living: Psychology, Discipline, Trading Tools <span class="hljs-keyword">and</span> Systems, Risk Control, Trade Management
Author    : <span class="hljs-type">Alexander</span> Elder
Tags      : <span class="hljs-type">Business</span> &amp; Economics, Finance, General, Accounting
Ids       : <span class="hljs-type">isbn</span>:<span class="hljs-number">9781118443927</span>, amazon:<span class="hljs-number">1118443926</span>, google:ydY5BAAAQBAJ
Published : <span class="hljs-type">Sep</span> <span class="hljs-number">2014</span>
Publisher : <span class="hljs-type">Wiley</span></code></pre></div>
<h2 id="part-1-individual-psychology">PART 1 Individual Psychology</h2>
<h3 id="5-reality-versus-fantasy">5. Reality versus Fantasy</h3>
<h4 id="trade-with-your-eyes-open">Trade with Your Eyes Open</h4>
<p>The public wants gurus, and new gurus will come. As an intelligent trader, you must realize that in the long run, no guru is going to make you rich. You have to work on that yourself.</p>
<p>A successful trader cannot afford wishful thinking—he must be a realist. There are no cheat sheets in the markets—you can see the truth in your trade diaries and equity curves.</p>
<p>To win in the markets, we need to master three essential components of trading: sound <strong>psychology</strong>, a <strong>logical trading system</strong>, and an <strong>effective risk management plan</strong>. These are like three legs of a stool—remove one and the stool will fall. It is a typical beginner mistake to focus exclusively on indicators and trading systems.</p>
<p>You have to analyze your feelings as you trade to make sure that your decisions are sound. Your trades must be based on clearly defined rules. You have to structure your money management so that no string of losses can kick you out of the game.</p>
<h3 id="6-self-destructiveness">6. Self-Destructiveness</h3>
<h4 id="controlling-self-destructiveness">Controlling Self-Destructiveness</h4>
<p><em>You need to be aware of your tendency to sabotage yourself. Stop blaming your losses on bad luck or on others, and take responsibility for your results. Start keeping a diary—a record of all your trades, with reasons for entering and exiting them. Look for repetitive patterns of success and failure. Those who don’t learn from the past are condemned to repeat it.</em></p>
<p>A trader needs a psychological safety net the way a mountain climber needs his survival gear. I found the principles of Alcoholics Anonymous, outlined below, to be of great help at an early stage of trader development. Strict money management rules also provide a safety net, while the diary helps you learn from your mistakes as well as successes.</p>
<h4 id="the-demolition-derby">The Demolition Derby</h4>
<p>Almost all professions provide safety nets for their members. Your bosses, colleagues, and clients will warn you when you behave badly or self-destructively. There is no such safety net in trading, which makes it more dangerous than most human endeavors. The markets offer endless opportunities to self-destruct.</p>
<p>Buying at the high point of the day is like swinging your car door open into the traffic. When your order to buy reaches the floor, traders rush to sell to you—to tear off your door along with your arm. Other traders want you to fail because when you lose they get your money.</p>
<p>Markets operate without normal human helpfulness. Every trader gets hit by others. Every trader tries to hit others. The trading highway is littered with wrecks. Trading is the most dangerous human endeavor, short of war.</p>
<h4 id="self-sabotage">Self-Sabotage</h4>
<p>When traders get in trouble, they tend to blame others, bad luck, or anything else. It hurts to look within yourself for the cause of your failure.</p>
<p>We cling to our self-defeating patterns. They can be treated—failure is a curable disease.</p>
<p><em>The mental baggage from childhood can prevent you from succeeding in the markets. You have to identify your weaknesses and work to change. Keep a trading diary—write down your reasons for entering and exiting every trade. Look for repetitive patterns of success and failure.</em></p>
<h4 id="gambling">Gambling</h4>
<p>Gamblers feel happy when trades go in their favor. They feel terribly low when they lose. They differ from successful professionals who focus on long-term plans and don’t get particularly upset or excited over any single trade.</p>
<p><em>The key sign of gambling is the inability to resist the urge to bet. If you feel that you are trading too much and the results are poor, stop trading for a month. This will give you a chance to re-evaluate your trading. If the urge to trade is so strong that you cannot stay away from the action for a month, then it is time to visit your local chapter of Gamblers Anonymous or start using the principles of Alcoholics Anonymous, outlined later in this chapter.</em></p>
<p>Unfortunately, trading often appeals to impulsive people, gamblers, and those who feel that the world owes them a living. If you trade for the excitement, you’ll inevitably take trades with bad odds and accept needless risks. The markets are unforgiving, and emotional trading always results in losses.</p>
<h3 id="7-trading-psychology">7. Trading Psychology</h3>
<h4 id="bending-the-rules">Bending the Rules</h4>
<p>You need to make trading as objective as possible. Be sure to follow money management rules. Keep a spreadsheet listing all your trades, including commissions and slippage. Keep a diary of all your trades with “before and after” charts. At the early stages of your trading career, you may have to devote as much energy to analyzing yourself as analyzing the markets.</p>
<h4 id="the-insight">The Insight</h4>
<p>Your success or failure as a trader depends on your emotions. You may have a brilliant trading system, but if you feel arrogant, frightened, or upset, your account is sure to suffer. If you become aware of fear, greed, or a gambler’s high, close your trades.</p>
<p>In trading, you compete against the sharpest minds in the world. Commissions and slippage slant the field against you. Now, on top of that, if you allow your emotions to interfere with your trading, the battle is lost. My friend and partner in SpikeTrade.com Kerry Lovvorn is fond of repeating: “It is hard enough to know what the market is going to do; if you don’t know what you are going to do, the game is lost.”</p>
<p>Having a good trading system is not enough. Many traders with good systems wash out because psychologically they are not prepared to win.</p>
<h3 id="8-trading-lessons-from-aa">8. Trading Lessons from AA</h3>
<h4 id="rock-bottom">Rock Bottom</h4>
<p>A drunk can begin his journey to recovery only after he admits that he is an alcoholic. He must see that alcohol controls his life and not the other way around. Most drunks cannot accept this painful truth. They can face it only after they hit rock bottom.</p>
<p>The pain of hitting rock bottom makes an alcoholic see how deep he has sunk. He sees a simple stark choice—either turn his life around or die. Only then is an alcoholic ready to begin his journey to recovery.</p>
<p><em>Profits give traders an emotional high and a feeling of power. They try to get high again, put on reckless trades, and give back their profits. Most traders cannot stand the pain of severe losses. They die as traders after hitting rock bottom and wash out of the markets. The few survivors realize that the main trouble is not with their methods—it is with their thinking. They can change and become successful traders.</em></p>
<h4 id="denial">Denial</h4>
<p><em>There is a stark parallel between an alcoholic and a trader whose account is being demolished by losses. As he keeps changing his trading tactics, he acts like an alcoholic who tries to solve his problem by switching from hard liquor to beer. A loser denies that he’s lost control over his trading life.</em></p>
<h3 id="9-losers-anonymous">9. Losers Anonymous</h3>
<h4 id="traders-first-step">Trader’s First Step</h4>
<p>The absolute maximum a trader may risk on any trade is two percent of his account equity.</p>
<p>If your account is small, limit yourself to trading fewer shares, less expensive futures, or mini-contracts. If you see an attractive trade, but a logical stop would have to be placed where more than 2 percent of equity would be at risk—pass on that trade. You may risk less, but you may never risk more. You must avoid risking more than 2 percent on a trade the way a recovering alcoholic avoids bars.</p>
<p>If you lose even a dollar more than your businessman’s risk, including commissions and slippage, you are a loser.</p>
<p>Poor record-keeping is a sure sign of a gambler. Good businessmen keep good records. Your trading records must show the date and price of every entry and exit, slippage, commissions, stops, all adjustments of stops, reasons for entering, objectives for exiting, maximum paper profit, maximum paper loss after a stop was hit, and any other data necessary to review and fully understand your trade later in the future.</p>
<h4 id="traders-rock-bottom">Trader’s Rock Bottom</h4>
<p>Hitting rock bottom feels horrible. It is painful and humiliating. You hit it when you lose money you cannot afford to lose. You hit it when you gamble away your savings. You hit it after you tell your friends how smart you are and later have to ask them for a loan. You hit rock bottom when the market comes roaring at you and yells: “You fool!”</p>
<p>Many traders who hit rock bottom slink away from the market and never look back. Many who trade today will be gone in a year, if not sooner. They’ll hit rock bottom, crumble, and leave. They’ll try to forget trading like a bad dream.</p>
<p>Some will lick their wounds and wait until the pain fades away and then return, having learned little. They’ll be fearful, and their fear will further impair their trading.</p>
<p>Fortunately, some traders will recoil from rock bottom to begin the process of change and growth. For these individuals, the pain of hitting rock bottom will break the vicious cycle of getting high from winning and then losing everything and crashing. <em>When you admit that your personal problem causes you to lose, you can begin building a new trading life. You can start developing the discipline of a winner.</em></p>
<h3 id="10-winners-and-losers">10. Winners and Losers</h3>
<h4 id="in-charge-of-your-life">In Charge of Your Life</h4>
<p>You have to analyze your behavior instead of acting out your feelings.</p>
<p>All of us have our own demons to exorcise on the journey to becoming successful traders.</p>
<ol>
<li>Decide that you are in the market for the long haul—that is, you want to be a trader even 20 years from now.</li>
<li>Learn as much as you can. Read and listen to experts, but keep a degree of healthy skepticism about everything. Ask questions, and do not accept experts at their word.</li>
<li>Do not get greedy and rush to trade—take your time to learn. The markets will be there, offering more good opportunities in the months and years ahead.</li>
<li>Develop a method for analyzing the market—that is, “If A happens, then B is likely to happen.” Markets have many dimensions—use several analytic methods to confirm trades. Test everything on historical data and then in the markets, using real money. Markets keep changing—you need different tools for trading bull and bear markets and transitional periods as well as a method for telling the difference (see the sections on technical analysis).</li>
<li>Develop a money management plan. Your first goal must be long-term survival; your second goal, a steady growth of capital; and your third goal, making high profits. Most traders put the third goal first and are unaware that goals 1 and 2 exist (see Section 9, “Risk Management”).</li>
<li>Be aware that a trader is the weakest link in any trading system. Go to a meeting of Alcoholics Anonymous to learn how to avoid losses or develop your own method for cutting out impulsive trades.</li>
<li>Winners think, feel, and act differently than losers. You must look within yourself, strip away your illusions, and change your old ways of being, thinking, and acting. Change is hard, but if you want to be a professional trader, you have to work on changing and developing your personality.</li>
</ol>
<p>In order to succeed, you need drive, knowledge, and discipline. Money is important, but less so than any of those qualities.</p>
<h4 id="emotional-trading">Emotional Trading</h4>
<p>Most people crave excitement and entertainment. Singers, actors, and professional athletes command much higher incomes than such mundane workmen as physicians, pilots, or college professors. People love to have their nerves tickled—they buy lottery tickets, fly to Las Vegas, and slow down to gawk at road accidents.</p>
<h4 id="like-an-ocean">Like an Ocean</h4>
<p>The market is like an ocean—it moves up and down regardless of what you wish.</p>
<p>A sailor cannot control the ocean, but he can control himself. He can study currents and weather patterns, learn good sailing techniques, and gain experience. He can learn when to sail and when to stay in the harbor. A successful sailor uses his intelligence.</p>
<p>A sailor whose boat is being battered by ocean winds battens his sails—reduces sail area. The first remedy for a trader battered by the market is to reduce the size of his trades. Trade small while you’re learning or when feeling stressed. A professional trader uses his head and stays calm. Only amateurs become excited or depressed. Emotional trading is a luxury that nobody can afford.</p>
<p>Most of all, your success or failure depends on your ability to use intellect rather than act emotionally. A trader who feels overjoyed when he wins and depressed when he loses is at the mercy of market moves and cannot accumulate equity.</p>
<pre style="background:linear-gradient(to right, white, #641C34, #EA899A, #F3F7EC, #E3FEF7);color:#1E0342;padding:5px" align="right" class="jop-noMdConv">
<a href="https://x.com/rnchyd/status/1880012027089023147" target="_blank" class="jop-noMdConv">Reply</a>
</pre>]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Standard volumetric measurement]]></title>
            <guid>156c7da1e0ed4381a294986df859bbf3</guid>
            <pubDate>Tue, 14 Jan 2025 04:33:50 GMT</pubDate>
            <content:encoded><![CDATA[<div><pre class="hljs"><code><span class="hljs-number">1</span> cup <span class="hljs-operator">=</span> <span class="hljs-number">240</span>ml <span class="hljs-operator">=</span> <span class="hljs-number">8</span> fluid Ounces
½ cup <span class="hljs-operator">=</span> <span class="hljs-number">120</span>ml <span class="hljs-operator">=</span> <span class="hljs-number">4</span> fluid ounces</code></pre></div>
<p>One stick is the equivalent of 8 tablespoons. One tablespoon of butter is therefore the<br />
equivalent to ½ ounce/15 grams.</p>
<p><strong>Liquid Measures</strong></p>
<div><pre class="hljs"><code><span class="hljs-symbol">1 </span>Teaspoon   = <span class="hljs-number">5</span> Millilitres
<span class="hljs-symbol">1 </span>Tablespoon = <span class="hljs-number">14</span> millilitres
<span class="hljs-symbol">2 </span>Tablespoons= <span class="hljs-number">1</span> Fluid Ounce</code></pre></div>
<p><strong>Solid Measures</strong></p>
<div><pre class="hljs"><code><span class="hljs-symbol">1 </span>Ounce   = <span class="hljs-number">28</span> Grams
<span class="hljs-symbol">16 </span>Ounces = <span class="hljs-number">1</span> Pound</code></pre></div>
<pre style="background:linear-gradient(to right, white, yellow, #F3F7EC, #E3FEF7);color:#1E0342;padding:5px" align="right" class="jop-noMdConv">
<a href="https://x.com/rnchyd/status/1879049920809972098" target="_blank" class="jop-noMdConv">Reply</a>
</pre>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Mindfulness for Focus - Simple Techniques to Sharpen Concentration]]></title>
            <guid>2df8e30f37ae4171a98e099505bc2789</guid>
            <pubDate>Sat, 14 Dec 2024 07:48:13 GMT</pubDate>
            <content:encoded><![CDATA[<p>Mindfulness is a practice that involves focusing on the present moment without judgment. This entails directing attention to thoughts, feelings, and sensations without becoming overwhelmed by them. It can be envisioned as observing the mind and body like a flowing river, where thoughts and feelings are observed as they arise and pass without being carried away by them.</p>
<p>Here are some key aspects of practicing mindfulness:</p>
<ul>
<li><strong>Focus on the present moment:</strong> Mindfulness is about being aware of the here and now, not dwelling on the past or worrying about the future.</li>
<li><strong>Non-judgmental observation:</strong>  Observe your thoughts and feelings without labeling them as positive or negative. Simply acknowledge their presence without judgment.</li>
<li><strong>Acceptance:</strong>  Embrace your thoughts and feelings without attempting to resist or alter them.</li>
<li><strong>Openness and curiosity:</strong> Be open to experiencing the present moment with curiosity and a sense of wonder.</li>
</ul>
<p>Mindfulness can be practiced through various techniques, including:</p>
<ul>
<li><strong>Meditation:</strong>  Mindfulness practice involves finding a comfortable sitting or lying position and directing one’s attention to the breath or a specific object.</li>
<li><strong>Mindful walking:</strong> Mindful walking involves paying close attention to the bodily sensations experienced during movement. This includes noticing the ground beneath the feet and the movement of the limbs.</li>
<li><strong>Mindful eating:</strong>  Mindful eating involves focusing on the taste, smell, and texture of food while savoring each bite.</li>
<li><strong>Mindful listening:</strong>  Mindful listening involves paying close attention to the sounds in the environment, noticing the subtle nuances of speech and music.</li>
</ul>
<p>Practicing mindfulness can bring numerous benefits, such as:</p>
<ul>
<li><strong>Reduced stress and anxiety:</strong> Focusing on the present moment can help individuals detach from worries and anxieties about the past or future.</li>
<li><strong>Improved focus and concentration:</strong> Mindfulness helps train mind to be more present and attentive, leading to better focus and concentration in daily life.</li>
<li><strong>Increased self-awareness:</strong> Mindfulness helps to become more aware of the thoughts, feelings, and bodily sensations, leading to greater self-understanding.</li>
<li><strong>Enhanced emotional regulation:</strong>  Observing emotions without judgment can help individuals learn to manage them more effectively and respond to challenges with greater composure.</li>
</ul>
<h2 id="improving-focus-and-concentration">Improving Focus and Concentration</h2>
<p>Focus and concentration are skills that require time and effort to develop, but they are achievable. The following are strategies that can be employed to enhance these skills:</p>
<p><strong>1. Mindfulness &amp; Meditation:</strong></p>
<ul>
<li><strong>Mindful Breathing:</strong>  To enhance focus and concentration, dedicate a few minutes daily to mindful breathing exercises. Pay close attention to the rise and fall of your chest or abdomen, gently redirecting your attention back to your breath whenever it strays.</li>
<li><strong>Guided Meditations:</strong> There are many apps and online resources offering guided meditations for focus and concentration. These can help to develop a consistent practice.</li>
</ul>
<p><strong>2. Minimize Distractions:</strong></p>
<ul>
<li><strong>Declutter Your Workspace:</strong> A clean and organized workspace can reduce visual and mental clutter, leading to better focus.</li>
<li><strong>Turn Off Notifications:</strong>  To eliminate distractions from technology, silence your phone, disable social media notifications, and close any unnecessary tabs on your computer.</li>
<li><strong>Use Noise-Canceling Headphones:</strong>  To minimize distractions from sound, noise-canceling headphones can be used to create a more conducive environment for focused work.</li>
</ul>
<p><strong>3.  Time Management Techniques:</strong></p>
<ul>
<li><strong>Pomodoro Technique:</strong>  To sustain focus and prevent burnout, implement the Pomodoro Technique by working in concentrated bursts of 25 minutes followed by brief breaks.</li>
<li><strong>Time Blocking:</strong>  To avoid multitasking and maintain focus on single tasks, schedule specific times for those requiring the highest level of concentration.</li>
</ul>
<p><strong>4.  Healthy Habits for Focus:</strong></p>
<ul>
<li><strong>Get Enough Sleep:</strong>  Sleep deprivation significantly impacts focus and concentration. Aim for 7-9 hours of quality sleep each night.</li>
<li><strong>Stay Hydrated:</strong>  Dehydration can lead to fatigue and difficulty concentrating. Drink plenty of water throughout the day.</li>
<li><strong>Eat a Balanced Diet:</strong>  To ensure optimal brain function, consume nutritious foods that provide sustained energy. Avoid sugary snacks and processed foods, as these can lead to energy crashes and hinder focus.</li>
<li><strong>Regular Exercise:</strong>  Physical activity improves blood flow to the brain and can enhance cognitive function, including focus.</li>
</ul>
<p><strong>5.  Mental Exercises:</strong></p>
<ul>
<li><strong>Brain Training Apps:</strong>  Apps like Lumosity and Elevate offer games and exercises designed to improve cognitive skills, including focus and memory.</li>
<li><strong>Puzzles and Games:</strong>  Engaging in mentally stimulating activities, such as crosswords, Sudoku, and other brain-teasing puzzles, can challenge your mind and enhance your focus.</li>
</ul>
<p><strong>6.  Mindful Breaks:</strong></p>
<ul>
<li><strong>Take Short Breaks:</strong>  To avoid mental fatigue, take regular breaks from your work. Every hour or so, step away to stretch, walk around, or simply relax and rejuvenate.</li>
<li><strong>Engage in Mindful Activities:</strong>  During your breaks, engage in activities that promote relaxation and mental clarity. These could include listening to music, reading, or spending time in nature.</li>
</ul>
<p><strong>Remember:</strong> Improving focus and concentration is an ongoing process, not a one-time achievement. Individuals should be patient with themselves and acknowledge their progress as they work towards enhancing these skills.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Standard Deviation Calculation with Code Example in Python]]></title>
            <guid>fb7276fb379f404589fffef8419a1047</guid>
            <pubDate>Tue, 06 Aug 2024 09:16:49 GMT</pubDate>
            <content:encoded><![CDATA[<p>Standard deviation is a measure of the amount of variation or dispersion in a set of values. It quantifies how much the values in a dataset deviate from the mean (average) of the dataset. A low standard deviation indicates that the values tend to be close to the mean, while a high standard deviation indicates that the values are spread out over a wider range.</p>
<h3 id="formula-for-standard-deviation">Formula for Standard Deviation</h3>
<p>For a dataset <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">X = \{x_1, x_2, \ldots, x_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em"></span><span class="mord mathnormal" style="margin-right:0.07847em">X</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span>:</p>
<ol>
<li>
<p><strong>Mean</strong> (<span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\mu)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mclose">)</span></span></span></span></span>):<br />
<span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mu = \frac{1}{n} \sum_{i=1}^{n} x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span></span></p>
</li>
<li>
<p><strong>Variance</strong> <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msup><mi>σ</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\sigma^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span>:<br />
<span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2 = \frac{1}{n} \sum_{i=1}^{n} (x_i - \mu)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord mathnormal">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
</li>
</ol>
<p><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">\sum_{i=1}^{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.104002em;vertical-align:-0.29971000000000003em"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em"><span></span></span></span></span></span></span></span></span></span></span></p>
<ol start="3">
<li><strong>Standard Deviation</strong> <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>σ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\sigma)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="mclose">)</span></span></span></span></span>:<br />
<span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi><mo>=</mo><msqrt><msup><mi>σ</mi><mn>2</mn></msup></msqrt><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sigma = \sqrt{\sigma^2} = \sqrt{\frac{1}{n} \sum_{i=1}^{n} (x_i - \mu)^2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em"></span><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.08494599999999997em"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9550540000000001em"><span class="svg-align" style="top:-3em"><span class="pstrut" style="height:3em"></span><span class="mord" style="padding-left:0.833em"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em"><span style="top:-2.9890000000000003em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.915054em"><span class="pstrut" style="height:3em"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.08em" viewbox="0 0 400000 1080" preserveaspectratio="xMinYMin slice"><path d="M95,702
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l0 -0
c5.3,-9.3,12,-14,20,-14
H400000v40H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M834 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08494599999999997em"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.604946em"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.235054em"><span class="svg-align" style="top:-3.8em"><span class="pstrut" style="height:3.8em"></span><span class="mord" style="padding-left:1em"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mord mathnormal">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.740108em"><span style="top:-2.9890000000000003em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.195054em"><span class="pstrut" style="height:3.8em"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="1.8800000000000001em" viewbox="0 0 400000 1944" preserveaspectratio="xMinYMin slice"><path d="M983 90
l0 -0
c4,-6.7,10,-10,18,-10 H400000v40
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M1001 80h400000v40h-400000z"></path></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.604946em"><span></span></span></span></span></span></span></span></span></span></li>
</ol>
<h3 id="calculating-standard-deviation-in-python">Calculating Standard Deviation in Python</h3>
<p>You can calculate the standard deviation in Python using the <code>statistics</code> module or using <code>numpy</code> for larger datasets.</p>
<h4 id="using-the-statistics-module">Using the <code>statistics</code> Module</h4>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> statistics

<span class="hljs-comment"># Example dataset</span>
data = [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>]

<span class="hljs-comment"># Calculate standard deviation</span>
std_dev = statistics.stdev(data)

<span class="hljs-built_in">print</span>(<span class="hljs-string">"Standard Deviation:"</span>, std_dev)</code></pre></div>
<h4 id="using-numpy">Using <code>numpy</code></h4>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> numpy <span class="hljs-keyword">as</span> np

<span class="hljs-comment"># Example dataset</span>
data = [<span class="hljs-number">2</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">5</span>, <span class="hljs-number">7</span>, <span class="hljs-number">9</span>]

<span class="hljs-comment"># Calculate standard deviation</span>
std_dev = np.std(data, ddof=<span class="hljs-number">1</span>)  <span class="hljs-comment"># ddof=1 provides sample standard deviation</span>

<span class="hljs-built_in">print</span>(<span class="hljs-string">"Standard Deviation:"</span>, std_dev)</code></pre></div>
<h3 id="explanation">Explanation</h3>
<ul>
<li><strong>Using <code>statistics.stdev</code></strong>: This function calculates the sample standard deviation.</li>
<li><strong>Using <code>numpy.std</code></strong>: The <code>np.std</code> function calculates the standard deviation. The <code>ddof=1</code> parameter specifies that the calculation should use the sample standard deviation formula (n-1 in the denominator).</li>
</ul>
<p>Both methods will give you the standard deviation of the dataset. You can choose either based on your preference or the size of your dataset.</p>
<h2 id="mean-and-variance">Mean and Variance</h2>
<p>In statistics, <strong>mean</strong> and <strong>variance</strong> are fundamental concepts used to describe the characteristics of a dataset.</p>
<h3 id="mean">Mean</h3>
<p>The <strong>mean</strong> (often referred to as the average) is a measure of central tendency. It represents the average value of a dataset and provides a summary of the data’s center.</p>
<h4 id="formula-for-mean">Formula for Mean</h4>
<p>For a dataset <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">X = \{x_1, x_2, \ldots, x_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em"></span><span class="mord mathnormal" style="margin-right:0.07847em">X</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span>:</p>
<p><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\mu = \frac{1}{n} \sum_{i=1}^{n} x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>Where:</p>
<ul>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em"></span><span class="mord mathnormal">μ</span></span></span></span></span> is the mean.</li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em"></span><span class="mord mathnormal">n</span></span></span></span></span> is the number of observations in the dataset.</li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span></span> represents each individual observation.</li>
</ul>
<h4 id="example">Example</h4>
<p>For the dataset <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{2, 4, 6, 8, 10\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">{</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">10</span><span class="mclose">}</span></span></span></span></span>:</p>
<p><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>=</mo><mfrac><mrow><mn>2</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>6</mn><mo>+</mo><mn>8</mn><mo>+</mo><mn>10</mn></mrow><mn>5</mn></mfrac><mo>=</mo><mfrac><mn>30</mn><mn>5</mn></mfrac><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">\mu = \frac{2 + 4 + 6 + 8 + 10}{5} = \frac{30}{5} = 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mbin mtight">+</span><span class="mord mtight">6</span><span class="mbin mtight">+</span><span class="mord mtight">8</span><span class="mbin mtight">+</span><span class="mord mtight">10</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">30</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">6</span></span></span></span></span></p>
<h3 id="variance">Variance</h3>
<p>The <strong>variance</strong> is a measure of how much the values in a dataset vary or spread out from the mean. It quantifies the degree of dispersion or spread in the data.</p>
<h4 id="formula-for-variance">Formula for Variance</h4>
<p>For a dataset <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mi>n</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">X = \{x_1, x_2, \ldots, x_n\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em"></span><span class="mord mathnormal" style="margin-right:0.07847em">X</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span></span>:</p>
<p><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2 = \frac{1}{n} \sum_{i=1}^{n} (x_i - \mu)^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.804292em"><span style="top:-2.40029em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.29971000000000003em"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord mathnormal">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></p>
<p>Where:</p>
<ul>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">\sigma^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span> is the variance.</li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em"></span><span class="mord mathnormal">μ</span></span></span></span></span> is the mean of the dataset.</li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">x_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em"><span></span></span></span></span></span></span></span></span></span></span> represents each individual observation.</li>
</ul>
<h4 id="example-2">Example</h4>
<p>For the dataset <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{2, 4, 6, 8, 10\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">{</span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em"></span><span class="mord">10</span><span class="mclose">}</span></span></span></span></span> with mean <span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">\mu = 6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">6</span></span></span></span></span>:</p>
<ol>
<li>
<p>Calculate the squared differences from the mean:</p>
<ul>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>2</mn><mo>−</mo><mn>6</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">(2 - 6)^2 = 16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord">6</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">16</span></span></span></span></span></li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>4</mn><mo>−</mo><mn>6</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">(4 - 6)^2 = 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord">6</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">4</span></span></span></span></span></li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>6</mn><mo>−</mo><mn>6</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">(6 - 6)^2 = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord">6</span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord">6</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">0</span></span></span></span></span></li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>8</mn><mo>−</mo><mn>6</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>4</mn></mrow><annotation encoding="application/x-tex">(8 - 6)^2 = 4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord">8</span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord">6</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">4</span></span></span></span></span></li>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>10</mn><mo>−</mo><mn>6</mn><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo>=</mo><mn>16</mn></mrow><annotation encoding="application/x-tex">(10 - 6)^2 = 16</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em"></span><span class="mopen">(</span><span class="mord">10</span><span class="mspace" style="margin-right:0.2222222222222222em"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em"></span><span class="mord">6</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">16</span></span></span></span></span></li>
</ul>
</li>
<li>
<p>Calculate the average of these squared differences:</p>
<ul>
<li><span><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>σ</mi><mn>2</mn></msup><mo>=</mo><mfrac><mrow><mn>16</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>0</mn><mo>+</mo><mn>4</mn><mo>+</mo><mn>16</mn></mrow><mn>5</mn></mfrac><mo>=</mo><mfrac><mn>40</mn><mn>5</mn></mfrac><mo>=</mo><mn>8</mn></mrow><annotation encoding="application/x-tex">\sigma^2 = \frac{16 + 4 + 0 + 4 + 16}{5} = \frac{40}{5} = 8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em"><span style="top:-3.063em;margin-right:0.05em"><span class="pstrut" style="height:2.7em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">16</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mbin mtight">+</span><span class="mord mtight">0</span><span class="mbin mtight">+</span><span class="mord mtight">4</span><span class="mbin mtight">+</span><span class="mord mtight">16</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em"><span style="top:-2.6550000000000002em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span><span style="top:-3.23em"><span class="pstrut" style="height:3em"></span><span class="frac-line" style="border-bottom-width:0.04em"></span></span><span style="top:-3.394em"><span class="pstrut" style="height:3em"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">40</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em"></span><span class="mord">8</span></span></span></span></span></li>
</ul>
</li>
</ol>
<h3 id="relationship-between-mean-and-variance">Relationship Between Mean and Variance</h3>
<ul>
<li><strong>Mean</strong> provides a central value around</li>
</ul>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Sorting an Unsorted Array using Arrays.sort]]></title>
            <guid>47463f9f7e5842439a075d96ac1a75d0</guid>
            <pubDate>Wed, 24 Jul 2024 06:51:49 GMT</pubDate>
            <content:encoded><![CDATA[<p>To sort an unsorted array in Java, you can use the <code>Arrays.sort()</code> method from the <code>java.util.Arrays</code> class. This method sorts the array in ascending order.</p>
<p>Here’s an example:</p>
<h3 id="sorting-an-unsorted-array">Sorting an Unsorted Array</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.Arrays;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Example unsorted array</span>
        <span class="hljs-type">int</span>[] unsortedArray = {<span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">8</span>, <span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">7</span>, <span class="hljs-number">4</span>, <span class="hljs-number">6</span>};

        <span class="hljs-comment">// Print the original unsorted array</span>
        System.out.println(<span class="hljs-string">"Unsorted array: "</span> + Arrays.toString(unsortedArray));

        <span class="hljs-comment">// Sort the array using Arrays.sort()</span>
        Arrays.sort(unsortedArray);

        <span class="hljs-comment">// Print the sorted array</span>
        System.out.println(<span class="hljs-string">"Sorted array: "</span> + Arrays.toString(unsortedArray));
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code>Unsorted array: <span class="hljs-string">[5, 3, 8, 1, 2, 7, 4, 6]</span>
Sorted array: <span class="hljs-string">[1, 2, 3, 4, 5, 6, 7, 8]</span></code></pre></div>
<h3 id="explanation">Explanation</h3>
<ol>
<li><strong>Input Array</strong>: The example array <code>unsortedArray</code> contains some unsorted values.</li>
<li><strong>Printing Unsorted Array</strong>: The original unsorted array is printed using <code>Arrays.toString()</code>.</li>
<li><strong>Sorting the Array</strong>: The <code>Arrays.sort()</code> method is called to sort the array in ascending order.</li>
<li><strong>Printing Sorted Array</strong>: The sorted array is printed using <code>Arrays.toString()</code>.</li>
</ol>
<p>The <code>Arrays.sort()</code> method is efficient and easy to use for sorting arrays in Java. It uses a Dual-Pivot Quicksort algorithm for primitive types, which is very efficient for most cases.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Using a HashSet to Remove Duplicates]]></title>
            <guid>39176649530b4f55aec899706421dcb0</guid>
            <pubDate>Wed, 24 Jul 2024 06:51:04 GMT</pubDate>
            <content:encoded><![CDATA[<p>To remove redundant (duplicate) data from an array in Java, you can use a <code>HashSet</code> to filter out duplicates since <code>HashSet</code> does not allow duplicate elements. After filtering, you can convert the <code>HashSet</code> back to an array if needed.</p>
<p>Here’s an example:</p>
<h3 id="using-a-hashset-to-remove-duplicates">Using a <code>HashSet</code> to Remove Duplicates</h3>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.Arrays;
<span class="hljs-keyword">import</span> java.util.HashSet;
<span class="hljs-keyword">import</span> java.util.Set;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Example array with redundant data</span>
        <span class="hljs-type">int</span>[] arrayWithDuplicates = {<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">3</span>, <span class="hljs-number">2</span>, <span class="hljs-number">1</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>};

        <span class="hljs-comment">// Remove duplicates using a HashSet</span>
        Set&lt;Integer&gt; set = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashSet</span>&lt;&gt;();
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> value : arrayWithDuplicates) {
            set.add(value);
        }

        <span class="hljs-comment">// Convert the set back to an array</span>
        <span class="hljs-type">int</span>[] arrayWithoutDuplicates = <span class="hljs-keyword">new</span> <span class="hljs-title class_">int</span>[set.size()];
        <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> value : set) {
            arrayWithoutDuplicates[index++] = value;
        }

        <span class="hljs-comment">// Print the result</span>
        System.out.println(<span class="hljs-string">"Array without duplicates: "</span> + Arrays.toString(arrayWithoutDuplicates));
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">Array</span> <span class="hljs-keyword">without</span> duplicates: [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>, <span class="hljs-number">4</span>, <span class="hljs-number">5</span>, <span class="hljs-number">6</span>, <span class="hljs-number">7</span>, <span class="hljs-number">8</span>, <span class="hljs-number">9</span>]</code></pre></div>
<h3 id="explanation">Explanation</h3>
<ol>
<li><strong>Input Array</strong>: The example array <code>arrayWithDuplicates</code> contains some duplicate values.</li>
<li><strong>Using <code>HashSet</code></strong>: A <code>HashSet</code> is used to store the elements of the array. Since <code>HashSet</code> does not allow duplicate elements, it automatically removes duplicates.</li>
<li><strong>Converting Back to Array</strong>: The unique elements from the <code>HashSet</code> are then converted back to an array.</li>
<li><strong>Printing the Result</strong>: The resulting array without duplicates is printed.</li>
</ol>
<p>This method ensures that all redundant data is removed, and it maintains the unique elements in the array.</p>
]]></content:encoded>
        </item>
        <item>
            <title><![CDATA[Optimal Techniques for Searching and Inserting Arrays and Collections in Java]]></title>
            <guid>d3784106d49e4be89d0d7ed5c2a0f64c</guid>
            <pubDate>Mon, 22 Jul 2024 16:36:08 GMT</pubDate>
            <content:encoded><![CDATA[<h2 id="arrays">Arrays</h2>
<p>The most effective way to search for a specific long value in a 50,000-element array in Java depends on whether the array is sorted or unsorted:</p>
<ul>
<li><strong>If the array is sorted</strong>, using a binary search is the most efficient method with a time complexity of O(log n).</li>
<li><strong>If the array is unsorted</strong>, a linear search is the way to go with a time complexity of O(n).</li>
</ul>
<h3 id="binary-search-for-sorted-array">Binary Search (for sorted array)</h3>
<p>Here’s an example using <code>Arrays.binarySearch()</code> for a sorted array:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.Arrays;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate a sorted array with 50,000 long values</span>
        <span class="hljs-type">long</span>[] sortedArray = <span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[<span class="hljs-number">50000</span>];
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; sortedArray.length; i++) {
            sortedArray[i] = i + <span class="hljs-number">1</span>; <span class="hljs-comment">// Example: filling array with values 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000</span>;

        <span class="hljs-comment">// Perform binary search</span>
        <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> Arrays.binarySearch(sortedArray, target);

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (index &gt;= <span class="hljs-number">0</span>) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found at index "</span> + index);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found"</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Value</span> <span class="hljs-number">25000</span> found at index <span class="hljs-number">24999</span></code></pre></div>
<h3 id="linear-search-for-unsorted-array">Linear Search (for unsorted array)</h3>
<p>Here’s an example using a linear search for an unsorted array:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate an unsorted array with 50,000 long values</span>
        <span class="hljs-type">long</span>[] unsortedArray = <span class="hljs-keyword">new</span> <span class="hljs-title class_">long</span>[<span class="hljs-number">50000</span>];
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; unsortedArray.length; i++) {
            unsortedArray[i] = (<span class="hljs-type">long</span>) (Math.random() * <span class="hljs-number">50000</span>); <span class="hljs-comment">// Example: random values</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000</span>;

        <span class="hljs-comment">// Perform linear search</span>
        <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; unsortedArray.length; i++) {
            <span class="hljs-keyword">if</span> (unsortedArray[i] == target) {
                index = i;
                <span class="hljs-keyword">break</span>;
            }
        }

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (index &gt;= <span class="hljs-number">0</span>) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found at index "</span> + index);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found"</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">Value</span> <span class="hljs-number">25000</span> <span class="hljs-built_in">found</span> at <span class="hljs-keyword">index</span> X (<span class="hljs-keyword">if</span> <span class="hljs-built_in">found</span>)
<span class="hljs-keyword">Value</span> <span class="hljs-number">25000</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span> (<span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> <span class="hljs-built_in">found</span>)</code></pre></div>
<h3 id="key-points">Key Points</h3>
<ul>
<li><strong>Binary Search</strong>: Use <code>Arrays.binarySearch()</code> on a sorted array for efficient searching with O(log n) time complexity.</li>
<li><strong>Linear Search</strong>: Use a simple <code>for</code> loop to search through an unsorted array with O(n) time complexity.</li>
</ul>
<p>Choose the method based on whether your array is sorted or unsorted for optimal performance.</p>
<h2 id="arraylist">ArrayList</h2>
<p>To search for a specific long value in a <code>ArrayList&lt;Long&gt;</code> with 50,000 elements in Java, you can use the <code>contains()</code> method for simplicity, or a <code>for</code> loop for more control. Here’s how you can do it:</p>
<h3 id="using-contains">Using <code>contains()</code></h3>
<p>The <code>contains()</code> method internally uses a linear search, which has a time complexity of O(n).</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.ArrayList;
<span class="hljs-keyword">import</span> java.util.List;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate an ArrayList with 50,000 long values</span>
        List&lt;Long&gt; arrayList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;(<span class="hljs-number">50000</span>);
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            arrayList.add(i); <span class="hljs-comment">// Example: filling list with values 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000</span>;

        <span class="hljs-comment">// Perform search using contains()</span>
        <span class="hljs-type">boolean</span> <span class="hljs-variable">found</span> <span class="hljs-operator">=</span> arrayList.contains(target);

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (found) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found in the list."</span>);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found in the list."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Value</span> <span class="hljs-number">25000</span> found in the list.</code></pre></div>
<h3 id="using-a-for-loop">Using a <code>for</code> Loop</h3>
<p>If you want more control over the search process (e.g., to find the index of the target value), you can use a <code>for</code> loop:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.ArrayList;
<span class="hljs-keyword">import</span> java.util.List;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate an ArrayList with 50,000 long values</span>
        List&lt;Long&gt; arrayList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">ArrayList</span>&lt;&gt;(<span class="hljs-number">50000</span>);
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            arrayList.add(i); <span class="hljs-comment">// Example: filling list with values 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000</span>;

        <span class="hljs-comment">// Perform linear search using a for loop</span>
        <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; arrayList.size(); i++) {
            <span class="hljs-keyword">if</span> (arrayList.get(i).equals(target)) {
                index = i;
                <span class="hljs-keyword">break</span>;
            }
        }

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (index &gt;= <span class="hljs-number">0</span>) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found at index "</span> + index);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found in the list."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Value</span> <span class="hljs-number">25000</span> found at index <span class="hljs-number">24999</span></code></pre></div>
<h3 id="key-points-2">Key Points</h3>
<ul>
<li><strong>Using <code>contains()</code></strong>: Simple and straightforward, but you won’t get the index of the found element.</li>
<li><strong>Using a <code>for</code> Loop</strong>: Provides more control and allows you to find the index of the element.</li>
</ul>
<p>Both methods perform a linear search, which is the most efficient approach for unsorted lists. If the list is sorted and you need faster search performance, consider using a <code>binary search</code> on a <code>List</code> by converting it to an array or using a <code>TreeSet</code> instead of an <code>ArrayList</code>.</p>
<h2 id="linkedlist">LinkedList</h2>
<p>To search for a specific long value in a <code>LinkedList&lt;Long&gt;</code> with 50,000 elements in Java, you typically use a linear search. This is because <code>LinkedList</code> does not support efficient random access, and a binary search would not be effective.</p>
<h3 id="using-a-for-loop-2">Using a <code>for</code> Loop</h3>
<p>Here’s an example using a <code>for</code> loop to perform a linear search:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.LinkedList;
<span class="hljs-keyword">import</span> java.util.List;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate a LinkedList with 50,000 long values</span>
        List&lt;Long&gt; linkedList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            linkedList.add(i); <span class="hljs-comment">// Example: filling list with values 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000</span>;

        <span class="hljs-comment">// Perform linear search using a for loop</span>
        <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;
        <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i &lt; linkedList.size(); i++) {
            <span class="hljs-keyword">if</span> (linkedList.get(i).equals(target)) {
                index = i;
                <span class="hljs-keyword">break</span>;
            }
        }

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (index &gt;= <span class="hljs-number">0</span>) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found at index "</span> + index);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found in the list."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Value</span> <span class="hljs-number">25000</span> found at index <span class="hljs-number">24999</span></code></pre></div>
<h3 id="using-an-iterator">Using an Iterator</h3>
<p>Alternatively, you can use an <code>Iterator</code> to traverse the <code>LinkedList</code>, which can be more efficient in terms of memory usage:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.LinkedList;
<span class="hljs-keyword">import</span> java.util.List;
<span class="hljs-keyword">import</span> java.util.Iterator;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate a LinkedList with 50,000 long values</span>
        List&lt;Long&gt; linkedList = <span class="hljs-keyword">new</span> <span class="hljs-title class_">LinkedList</span>&lt;&gt;();
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            linkedList.add(i); <span class="hljs-comment">// Example: filling list with values 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000</span>;

        <span class="hljs-comment">// Perform linear search using an iterator</span>
        <span class="hljs-type">int</span> <span class="hljs-variable">index</span> <span class="hljs-operator">=</span> -<span class="hljs-number">1</span>;
        <span class="hljs-type">int</span> <span class="hljs-variable">currentIndex</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>;
        Iterator&lt;Long&gt; iterator = linkedList.iterator();
        <span class="hljs-keyword">while</span> (iterator.hasNext()) {
            <span class="hljs-keyword">if</span> (iterator.next().equals(target)) {
                index = currentIndex;
                <span class="hljs-keyword">break</span>;
            }
            currentIndex++;
        }

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (index &gt;= <span class="hljs-number">0</span>) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found at index "</span> + index);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found in the list."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Value</span> <span class="hljs-number">25000</span> found at index <span class="hljs-number">24999</span></code></pre></div>
<h3 id="key-points-3">Key Points</h3>
<ul>
<li><strong>Linear Search</strong>: The most effective way to search a <code>LinkedList</code> due to its sequential nature.</li>
<li><strong>Using an Iterator</strong>: Can be more memory-efficient and avoids the overhead of repeatedly calling <code>get()</code>.</li>
</ul>
<p>Both methods perform a linear search, which is the most appropriate approach for a <code>LinkedList</code> due to its sequential access nature.</p>
<h2 id="hashset">HashSet</h2>
<p>The most effective way to search for a specific long value in a <code>HashSet&lt;Long&gt;</code> in Java is to use the <code>contains()</code> method. The <code>HashSet</code> class is designed for fast lookups, and the <code>contains()</code> method operates with an average time complexity of O(1).</p>
<p>Here’s an example demonstrating this:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.HashSet;
<span class="hljs-keyword">import</span> java.util.Set;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate a HashSet with 50,000 long values</span>
        Set&lt;Long&gt; hashSet = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashSet</span>&lt;&gt;(<span class="hljs-number">50000</span>);
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            hashSet.add(i); <span class="hljs-comment">// Example: filling set with values 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">target</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000L</span>;

        <span class="hljs-comment">// Perform search using contains()</span>
        <span class="hljs-type">boolean</span> <span class="hljs-variable">found</span> <span class="hljs-operator">=</span> hashSet.contains(target);

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (found) {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" found in the set."</span>);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + target + <span class="hljs-string">" not found in the set."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code>Value <span class="hljs-number">25000</span> found <span class="hljs-keyword">in</span> <span class="hljs-keyword">the</span> <span class="hljs-built_in">set</span>.</code></pre></div>
<h3 id="key-points-4">Key Points</h3>
<ul>
<li><strong>Using <code>HashSet</code></strong>: <code>HashSet</code> is optimized for fast lookups, insertions, and deletions.</li>
<li><strong>Time Complexity</strong>: The <code>contains()</code> method has an average time complexity of O(1), making it very efficient for search operations.</li>
</ul>
<p>This approach leverages the strengths of <code>HashSet</code> to provide quick and efficient search capabilities.</p>
<h2 id="hashmap">HashMap</h2>
<p>The most effective way to search for a specific long value in a <code>HashMap&lt;Long, Long&gt;</code> in Java is to use the <code>containsKey()</code> or <code>containsValue()</code> methods, depending on whether you are searching by key or by value. The <code>HashMap</code> class is optimized for fast lookups, with an average time complexity of O(1) for these operations.</p>
<h3 id="searching-by-key">Searching by Key</h3>
<p>Here’s an example demonstrating how to search for a key in a <code>HashMap</code>:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.HashMap;
<span class="hljs-keyword">import</span> java.util.Map;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate a HashMap with 50,000 key-value pairs</span>
        Map&lt;Long, Long&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;(<span class="hljs-number">50000</span>);
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            hashMap.put(i, i); <span class="hljs-comment">// Example: filling map with key-value pairs 1 to 50000</span>
        }

        <span class="hljs-comment">// Key to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">targetKey</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000L</span>;

        <span class="hljs-comment">// Perform search using containsKey()</span>
        <span class="hljs-type">boolean</span> <span class="hljs-variable">keyFound</span> <span class="hljs-operator">=</span> hashMap.containsKey(targetKey);

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (keyFound) {
            System.out.println(<span class="hljs-string">"Key "</span> + targetKey + <span class="hljs-string">" found in the map."</span>);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Key "</span> + targetKey + <span class="hljs-string">" not found in the map."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Key</span> <span class="hljs-number">25000</span> found in the map.</code></pre></div>
<h3 id="searching-by-value">Searching by Value</h3>
<p>Here’s an example demonstrating how to search for a value in a <code>HashMap</code>:</p>
<div><pre class="hljs"><code><span class="hljs-keyword">import</span> java.util.HashMap;
<span class="hljs-keyword">import</span> java.util.Map;

<span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Main</span> {
    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">main</span><span class="hljs-params">(String[] args)</span> {
        <span class="hljs-comment">// Create and populate a HashMap with 50,000 key-value pairs</span>
        Map&lt;Long, Long&gt; hashMap = <span class="hljs-keyword">new</span> <span class="hljs-title class_">HashMap</span>&lt;&gt;(<span class="hljs-number">50000</span>);
        <span class="hljs-keyword">for</span> (<span class="hljs-type">long</span> <span class="hljs-variable">i</span> <span class="hljs-operator">=</span> <span class="hljs-number">1</span>; i &lt;= <span class="hljs-number">50000</span>; i++) {
            hashMap.put(i, i); <span class="hljs-comment">// Example: filling map with key-value pairs 1 to 50000</span>
        }

        <span class="hljs-comment">// Value to search for</span>
        <span class="hljs-type">long</span> <span class="hljs-variable">targetValue</span> <span class="hljs-operator">=</span> <span class="hljs-number">25000L</span>;

        <span class="hljs-comment">// Perform search using containsValue()</span>
        <span class="hljs-type">boolean</span> <span class="hljs-variable">valueFound</span> <span class="hljs-operator">=</span> hashMap.containsValue(targetValue);

        <span class="hljs-comment">// Print the result</span>
        <span class="hljs-keyword">if</span> (valueFound) {
            System.out.println(<span class="hljs-string">"Value "</span> + targetValue + <span class="hljs-string">" found in the map."</span>);
        } <span class="hljs-keyword">else</span> {
            System.out.println(<span class="hljs-string">"Value "</span> + targetValue + <span class="hljs-string">" not found in the map."</span>);
        }
    }
}</code></pre></div>
<p>Output:</p>
<div><pre class="hljs"><code><span class="hljs-attribute">Value</span> <span class="hljs-number">25000</span> found</code></pre></div>
]]></content:encoded>
        </item>
    </channel>
</rss>